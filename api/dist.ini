name             = Penhas
author           = Renato CRON <penhas.dist[at]renatocron.com>
abstract         = Penhas API
license          = AGPL_3
copyright_holder = AppCivico
copyright_year   = 2020

[@Filter]
-bundle = @Basic
-remove = UploadToCPAN
-remove = Readme

[Test::Perl::Critic]
critic_config = perlcritic.rc

[Test::Compile]
[Test::Kwalitee]
[Test::DistManifest]
[Test::EOL]
[Test::CPAN::Meta::JSON]
[Test::NoTabs]
[Test::UnusedVars]

[MetaTests]

[MinimumPerl]
perl = 5.024

[AutoVersion]
format = {{ cldr('yyyyMMdd') }}

[ManifestSkip]

[Encoding]
encoding = bytes
match    = \.jpg$
match    = \.xls$
match    = \.xlsx$
match    = \.zip$
match    = \.png$
match    = \.csv$
match    = \.aac$

[ReadmeAnyFromPod]
filename = README
type     = text

[AutoPrereqs]
skip = ^Penhas::Test

[Prereqs]
EV                                     = 0
Net::DNS::Native                       = 0
App::Sqitch                            = 0
IO::Socket::SSL                        = 0
DBD::Pg                                = 0
DBD::mysql                             = 0
DBIx::Class::TimeStamp                 = 0
DBIx::Class::PassphraseColumn          = 0
DBIx::Class::InflateColumn::Serializer = 0
Test::Mojo::Role::StopOnFail           = 0
Test2::Harness                         = 0
Mojolicious::Plugin::RenderFile        = 0.12
Mojolicious::Plugin::Log::Any          = 0
Mojolicious                            = 8.57
Cpanel::JSON::XS                       = 4.18
Text::Xslate::Bridge::TT2Like          = 0
Readonly                               = 2.05
Mojolicious::Plugin::Minion            = 0
Imager::File::GIF                      = 0
Imager::File::JPEG                     = 0
Imager::File::PNG                      = 0
LWP::Protocol::https                   = 0
List::Util                             = 1.54
Mojolicious::Plugin::ParamLogger       = 0.03
Crypt::CBC                             = 2.33
Crypt::Rijndael                        = 1.14

[Run::BeforeBuild]
run = rm -f Makefile.PL

[Run::AfterBuild]
run = cp %d/Makefile.PL ./
run = ( type 'ctags' >/dev/null && ctags -R ./lib ./script ) || exit 0
run = ( (git status --porcelain | grep 'M Makefile.PL' && git add Makefile.PL || git status --porcelain | grep 'M tags' && git add tags ) && git commit -m 'auto-committed by Dist::Zilla') || echo Nothing to auto-commit.

